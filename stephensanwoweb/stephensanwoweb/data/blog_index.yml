title: Title
slug: new_article
notification: False
notification_message: ""
content: Index
breadcrumb:
  - page: Index
    page_url: /index
meta:
  product: Product
  title: Title
  description: Description  
  type: article
  url: https://www.stephensanwo.dev
  image: image_url
  tags: 
    - Tag 1
  authors: 
    - Stephen Sanwo
data:
  title: Title
  urls:
    - id: 1
      url: ''
      title: Fork on Github
  caption: Caption
  tags: 
   - '#Tag 1'
  body:
    - type: image
      title: Image Title
      url: image_url

    - type: markdown
      content: |
        Markdown text

    - type: paragraph
      content:
        - Paragraph1
        - Paragraph2

    - type: warning
      content: Warning

    - type: sub-heading
      content: Sub Heading
      
    - type: code-snippet-default
      language: python
      content: | 
        import os
        from dotenv import load_dotenv
        import requests
        import json

        load_dotenv()

        class GPT:
            def __init__(self):
                self.url = os.environ.get('MODEL_URL')
                self.headers = {
                    "Authorization": f"Bearer {os.environ.get('HUGGINFACE_INFERENCE_TOKEN')}"}
                self.payload = {
                    "inputs": "",
                    "parameters": {
                        "return_full_text": False,
                        "use_cache": True,
                        "max_new_tokens": 25
                    }

                }

            def query(self, input: str) -> list:
                self.payload["inputs"] = input
                data = json.dumps(self.payload)
                response = requests.request(
                    "POST", self.url, headers=self.headers, data=data)
                print(json.loads(response.content.decode("utf-8")))
                return json.loads(response.content.decode("utf-8"))

        if __name__ == "__main__":
            GPT().query("Will artificial intelligence help humanity conquer the universe?")

  cards: []

  links: []